# NOTE: You can verify that you haven't broken the format with
# $ ruby -rpp -ryaml -e 'pp YAML.load File.read("1406/04_clone_wars/clone_wars_submissions.yml")
submissions:
  Chad Brading, Gustavo Villagrana, Hilary Denton:
    repository: git@github.com:GusVilla303/Clone-Wars.git
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 2.5
        Test-Driven Development: 1.5
        Encapsulation / Components: 2
        Fundamental Ruby & Style: 2
        Sinatra / Web and Business Logic: 3
        View Layer: 4
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
  Corey Davis, Marc Garreau, Robert Gu:
    repository: git@github.com:MarcGarreau/clonewars_uncubed.git
    setup_notes: "run bundle install to pull dependencies, then run bundle exec to rack up"
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
  Andy Mention, Emily Davis:
    repository: git@github.com:AndyDangerous/lodojimmys.git
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
    peer_evaluation:
      notes: "func. expect. = medium on 'Contact Us' - had image upload functionality but we weren't able to get it working
                              medium on 'Web Based Application System'
              TDD           = small number of acceptance tests
              encap., comp. = good breakdown of components, could break views by pulling admin into own file
                              good use of SRP, could use models
              style, syntax = style is good, difficult to find areas to refactor
              sinatra, logic= good separation of logic from web
              view layer    = could break down views into partials
      "
      rubric:
        Functional Expectations: 3
        Test-Driven Development: 2.5
        Encapsulation / Components: 3
        Fundamental Ruby & Style: 3.5
        Sinatra / Web and Business Logic: 3.5
        View Layer: 3
  Jonmichael Chambers, Eric Fransen, Alan Smith:
    repository: https://github.com/tyrbo/hapa-sushi
    setup_notes: "Needs (brew install imagemagick) ImageMagick. init.rb file will build a database for whatever env we are in."
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
  Andrew Watkins, Allison Larson, Horacio Chavez:
    repository: https://github.com/allisonlarson/clone_wars.git
    setup_notes: "clone of http://playersclothing.com/"
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
  Tim Proctor, Tan Doan, Will Faurot: 
    repository: https://github.com/timproctor/clone_wars.git
    setup_notes: ""
    instructor_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
    peer_evaluation:
      notes: ""
      rubric:
        Functional Expectations: 0
        Test-Driven Development: 0
        Encapsulation / Components: 0
        Fundamental Ruby & Style: 0
        Sinatra / Web and Business Logic: 0
        View Layer: 0
